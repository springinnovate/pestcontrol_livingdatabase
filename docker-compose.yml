services:
  app:
    hostname: app_api
    build: app
    volumes:
      - ./app:/usr/local/pcld_api
      - pcld_data:/usr/local/data
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '2'
    tty: true
    entrypoint: >
      sh -c "rsync -av /usr/local/pcld_api/live_database/ /usr/local/data/live_database/ && waitress-serve --host=0.0.0.0 --port=5000 app:app"
    expose:
      - "5000"
    depends_on:
      - redis
      - reverse-proxy
      - celery_worker
    environment:
      - INIT_COVARIATES=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`pcld.ecoshard.org`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"

  app_dev:
    extends:
      service: app
    profiles:
      - development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app_dev.rule=Host(`localhost`)"
      - "traefik.http.routers.app_dev.entrypoints=websecure"
      - "traefik.http.routers.app_dev.tls=true"

  celery_worker:
    container_name: celery_worker
    hostname: celery_worker
    build: app
    volumes:
      - ./app:/usr/local/pcld_api
      - pcld_data:/usr/local/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INIT_COVARIATES=False
      - ENV GOOGLE_APPLICATION_CREDENTIALS=/usr/local/pcld_api/secrets/service-account-key.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: celery -A app.celery worker --loglevel=info --concurrency=4 --max-tasks-per-child=10
    depends_on:
      - redis

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  reverse-proxy:
    image: traefik:v2.11
    command:
      # --- providers ----------------------------
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--certificatesResolvers.letsencrypt.acme.email=rich@springinnovate.org"
      - "--certificatesResolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

volumes:
  pcld_data:
