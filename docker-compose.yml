version: '3.6'

services:
  backend:
    container_name: backend
    hostname: backend_api
    build: docker_contexts/backend
    volumes:
      - ./docker_contexts/backend:/usr/local/pcld_api
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '2'
    tty: true
    entrypoint: [
      "waitress-serve", "--host=0.0.0.0", "--port=5000", "app:app"
    ]
    ports:
      - 80:5000
    # environment:
    #   - DATABASE_URL=postgresql://postgres:password@db:5432/mydatabase
    depends_on:
      - redis
    environment:
      - INIT_COVARIATES=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery_worker:
    container_name: celery_worker
    hostname: celery_worker
    build: docker_contexts/backend
    volumes:
      - ./docker_contexts/backend:/usr/local/pcld_api
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INIT_COVARIATES=False
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: celery -A app.celery worker --loglevel=info
    depends_on:
      - backend
      - redis

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  # db:
  #   image: postgres:13
  #   container_name: postgres
  #   environment:
  #     POSTGRES_DB: mydatabase
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - 8080:80
  #   depends_on:
  #     - db


  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./docker_contexts/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80

volumes:
  pgdata:
