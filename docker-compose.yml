services:
  backend:
    container_name: backend
    hostname: backend_api
    build: docker_contexts/backend
    volumes:
      - ./docker_contexts/backend:/usr/local/pcld_api
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '2'
    tty: true
    entrypoint: [
      "waitress-serve", "--host=0.0.0.0", "--port=5000", "app:app"
    ]
    expose:
      - "5000"
    depends_on:
      - redis
    environment:
      - INIT_COVARIATES=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  backend_dev:
    extends:
      service: backend
    ports:
      - "5000:5000"
    profiles:
      - development

  celery_worker:
    container_name: celery_worker
    hostname: celery_worker
    build: docker_contexts/backend
    volumes:
      - ./docker_contexts/backend:/usr/local/pcld_api
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INIT_COVARIATES=False
      - ENV GOOGLE_APPLICATION_CREDENTIALS=/usr/local/pcld_api/secrets/service-account-key.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: celery -A app.celery worker --loglevel=info --concurrency=4 --max-tasks-per-child=10
    depends_on:
      - backend
      - redis

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    volumes:
      - ./docker_contexts/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/pcld.ecoshard.org/fullchain.pem:/etc/nginx/ssl/cert.crt
      - /etc/letsencrypt/live/pcld.ecoshard.org/privkey.pem:/etc/nginx/ssl/cert.key
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
